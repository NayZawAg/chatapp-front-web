<% provide(:title, 'Thread') %>
<div id="main">
  <h1 style="margin-left: 200px;">Thread Lists</h1>

  <div class="tab-container">
    <div class="tab2">
      <button class="tablinks" onclick="openTab(event, 'direct')">Direct Threads</button>
      <button class="tablinks" onclick="openTab(event, 'group')">Group Threads</button>
    </div>
  </div>

  <div id="direct" class="tabcontent">
    <% if @t_direct_messages.any? %>
      <% @t_direct_messages.each do |t_direct_message| %>
        <div class="thread-container">
          
          <% mainUser = "" %>
          <% if t_direct_message['sender_id'] != @current_user_id %>
            <% mainUser = t_direct_message['name'] %>
          <% else %>
            <% mainUser = t_direct_message['receiver_name'] %>
          <% end %>

          <h2 style="padding: 0px; margin-left: 14px;"><%= mainUser %></h2>

          <% otherUser = "" %>
          <% if t_direct_message['sender_id'] != @current_user_id %>
            <% otherUser = t_direct_message['name'] %>
          <% end %>

          <% @t_direct_threads.each do |t_direct_thread| %>
            <% if t_direct_message['id'] == t_direct_thread['t_direct_message_id'] %>
              <% if @current_user_id != t_direct_thread['sender_id'] %>
                <% otherUser = t_direct_thread['name'] %>
              <% end %>
            <% end %>
          <% end %>

          <% if otherUser == "" %>
            <h5 class="groupthreadnames">自分のみ</h5>
          <% else %>
            <h5 class="groupthreadnames"> <%= otherUser %>さんとあなた </h5>
          <% end %>

          <% if t_direct_message['profile_image'].present? %>
            <img src="<%= t_direct_message['profile_image'] %>" alt="Profile Image" class="profile-image" style="margin-left: 20px">
          <% else %>
            <div class="profile-placeholder" style="margin-left: 20px">
              <%= t_direct_message['name'][0].upcase %>
            </div>
          <% end %>

          <p class="style22" style="font-weight: bold;"><%= t_direct_message['name'] %></p>
          <p class="style23"><%= (t_direct_message['created_at'].to_time + 9.hours).strftime("%F/%I:%M%p") %></p>
          <p class="style24"></p>

          <% if @t_direct_star_msgids.include?(t_direct_message['id']) %>
            <%= link_to "", "", class: 'fas fa-star' %>
          <% else %>
            <%= link_to "", "", class: 'far fa-star' %>
          <% end %>

          <div style="word-wrap: break-word; width: 550px; margin-left: 80px;">
            <%= render_html(t_direct_message['directmsg']) %>
          </div>

          <div style="margin-left: 50px">
            <h2 style="padding-top: 0px;">Reply</h2>
            <% @count = 0 %>
            <% thread_replies = @t_direct_threads.select { |t| t['t_direct_message_id'] == t_direct_message['id'] } %>
            <% total_replies = thread_replies.count %>
            
            <% if total_replies > 3 %>
              <p><a href="#" class="show-more-replies" message-id="<%= t_direct_message['id'] %>"><%= total_replies - 2 %> 件のそのそ他の返信を表示</a></p>
            <% end %>

            <div class="replies-container" id="replies-<%= t_direct_message['id'] %>">
              <% thread_replies.each_with_index do |direct_thread, index| %>
                <div class="reply <%= index < total_replies - 2 ? 'hidden-reply' : '' %>">
                  <% if direct_thread['profile_image'].present? %>
                    <img src="<%= direct_thread['profile_image'] %>" alt="Profile Image" class="profile-image" style="margin-left: 20px">
                  <% else %>
                    <div class="profile-placeholder" style="margin-left: 20px">
                      <%= direct_thread['name'][0].upcase %>
                    </div>
                  <% end %> 
                  <p class="style22" style="font-weight: bold;"><%= direct_thread['name'] %></p>
                  <p class="style23"><%= (direct_thread['created_at'].to_time + 9.hours).strftime("%F/%I:%M%p") %></p>
                  <p class="style24"></p> 
                  <% if @t_direct_star_thread_msgids.include?(direct_thread['id']) %>
                    <%= link_to "", "", class: 'fas fa-star' %>
                  <% else %>
                    <%= link_to "", "", class: 'far fa-star' %>
                  <% end %> 
                  <div class="style3" style="word-wrap: break-word; width: 550px; margin-left: 80px;">
                    <%= render_html(direct_thread['directthreadmsg']) %>
                  </div>
                </div>
              <% end %>
            </div>
          </div>

          <div class="textboxbg2">
            <div class="textboxeditor2" oninput="adjustTextboxHeight(this, event)">
              
              <div class="toolbar" id="toolbar-<%= t_direct_message['id'] %>">
                <button class="ql-bold disable"></button>
                <button class="ql-italic disable"></button>
                <button class="ql-strike disable"></button>
                <button class="ql-link disable"></button>
                <button class="ql-list" value="ordered"></button>
                <button class="ql-list" value="bullet"></button>
                <button class="ql-blockquote"></button>
                <button class="ql-code-block" onclick="adjustTextboxHeight(this.closest('.textboxeditor2'), event)"><i class="fas fa-code"></i></button>
                <button id="highlight-text-<%= t_direct_message['id'] %>" class="btn-icon disable"><i class="fas fa-laptop-code"></i></button>
              </div>
              
              <div class="link-dialog" id="link-dialog-<%= t_direct_message['id'] %>" style="display: none;">
                <h3 id="link-title">Add your link</h3>
                <input type="text" id="link-name-<%= t_direct_message['id'] %>" placeholder="Enter link name">
                <input type="text" id="link-url-<%= t_direct_message['id'] %>" placeholder="Enter URL">
                <button id="link-cancel-<%= t_direct_message['id'] %>">Cancel</button>
                <button id="link-save-<%= t_direct_message['id'] %>">Yes</button>
              </div>
              
              <%= form_for(:session, url: directthreadmsgdirectly_path) do |f| %>
                <div class="col-md-11">
                  <div class="editor" id="editor-<%= t_direct_message['id'] %>" data-direct-message-id="<%= t_direct_message['id'] %>"></div>
                  <%= f.hidden_field :message, id: "quill-content-#{t_direct_message['id']}" %>
                  <%= f.hidden_field :t_direct_message_id, value: t_direct_message['id'] %>
                  <%= f.hidden_field :t_directmsg_sender_id, value: t_direct_message['sender_id'] %>
                </div>
                <div class="col-md-1 mt-10">
                  <%= f.submit "Send", class: "btn btn-primary", id: "sendbtn-#{t_direct_message['id']}" %>
                </div>
              <% end %>
              
              <div class="col-md-11">
                <span><i class="fas fa-plus"></i></span>
                <button class="glyphicon glyphicon-font icon togglebtn" id="toggle-toolbar-<%= t_direct_message['id'] %>"></button>
              </div>
            </div>
          </div>
        </div>
      <% end %>
    <% else %>
      <div class="no-data-container">
        <p class="style2">No direct thread yet!</p>
      </div>
    <% end %>
  </div>

  <div id="group" class="tabcontent">
    <% if @t_group_messages.any? %>
      <% @t_group_messages.each do |t_group_message| %>
      <div class="thread-container">
        <h2 style="padding: 0px; margin-left: 14px;"><%= t_group_message['channel_name'] %></h2>

        <% sendUserNames = [] %>
        <% loginUserName = "" %>

        <% if t_group_message['m_user_id'] != @current_user_id %>
          <% sendUserNames.unshift(t_group_message['name']) %>
        <% else %>
          <% loginUserName = "とあなた" %>
        <% end %>

        <% @t_group_threads.each do |t_group_thread| %>
          <% if t_group_message['id'] == t_group_thread['t_group_message_id'] %>
            <% if @current_user_id != t_group_thread['m_user_id'] %>
              <% sendUserNames.unshift(t_group_thread['name']) %>
            <% else %>
              <% loginUserName = "とあなた" %>
            <%end%>
          <% end %>
        <% end %>
        <% sendUserNames = sendUserNames | [] %>
        <% if sendUserNames.length == 0 %>
          <h5 class="groupthreadnames">自分のみ</h5>
        <% else %>
          <h5 class="groupthreadnames">
          <%= (sendUserNames.join("さん、") + "さん、" + loginUserName) %>
          </h5>
        <% end %>

        <% if t_group_message['profile_image'].present? %>
          <img src="<%= t_group_message['profile_image'] %>" alt="Profile Image" class="profile-image" style="margin-left: 20px">
        <% else %>
          <div class="profile-placeholder" style="margin-left: 20px">
            <%= t_group_message['name'][0].upcase %>
          </div>
        <% end %> 
        <p class="style22" style="font-weight: bold;"><%= t_group_message['name'] %></p>
        <p class="style23"><%= (t_group_message['created_at'].to_time + 9.hours).strftime("%F/%I:%M%p") %></p>
        <p class="style24"></p> 
        <% if @t_group_star_msgids.include?(t_group_message['id']) %>
          <%= link_to "", "", class: 'fas fa-star' %>
        <% else %>
          <%= link_to "", "", class: 'far fa-star' %>
        <% end %> 
        <div class="style3" style="word-wrap: break-word; width: 550px; margin-left: 80px;">
          <%= render_html(t_group_message['groupmsg']) %>
        </div>
        
        <div style="margin-left: 50px">
          <h2 style="padding-top: 0px;">Reply</h2>
          <% @count = 0 %>
          <% thread_replies = @t_group_threads.select { |t| t['t_group_message_id'] == t_group_message['id'] } %>
          <% total_replies = thread_replies.count %>
          
          <% if total_replies > 3 %>
            <p><a href="#" class="g-show-more-replies" message-id="<%= t_group_message['id'] %>"><%= total_replies - 2 %> 件のそのそ他の返信を表示</a></p>
          <% end %>
          <div class="replies-container" id="g-replies-<%= t_group_message['id'] %>">
            <% thread_replies.each_with_index do |group_thread, index| %>
              <div class="reply <%= index < total_replies - 2 ? 'hidden-reply' : '' %>">
                <% if group_thread['profile_image'].present? %>
                  <img src="<%= group_thread['profile_image'] %>" alt="Profile Image" class="profile-image" style="margin-left: 20px">
                <% else %>
                  <div class="profile-placeholder" style="margin-left: 20px">
                    <%= group_thread['name'][0].upcase %>
                  </div>
                <% end %> 
                <p class="style22" style="font-weight: bold;"><%= group_thread['name'] %></p>
                <p class="style23"><%= (group_thread['created_at'].to_time + 9.hours).strftime("%F/%I:%M%p") %></p>
                <p class="style24"></p> 
                <% if @t_group_star_thread_msgids.include?(group_thread['id']) %>
                  <%= link_to "", "", class: 'fas fa-star' %>
                <% else %>
                  <%= link_to "", "", class: 'far fa-star' %>
                <% end %> 
                <div class="style3" style="word-wrap: break-word; width: 550px; margin-left: 80px;">
                  <%= render_html(group_thread['groupthreadmsg']) %>
                </div>
              </div>
            <% end %>
          </div>
        </div>

        <div class="textboxbg2">
          <div class="textboxeditor2" oninput="adjustTextboxHeight(this, event)">
            <div class="toolbar" id="g-toolbar-<%= t_group_message['id'] %>">
              <button class="ql-bold disable"></button>
              <button class="ql-italic disable"></button>
              <button class="ql-strike disable"></button>
              <button class="ql-link disable"></button>
              <button class="ql-list" value="ordered"></button>
              <button class="ql-list" value="bullet"></button>
              <button class="ql-blockquote"></button>
              <button class="ql-code-block" onclick="adjustTextboxHeight(this.closest('.textboxeditor2'), event)"><i class="fas fa-code"></i></button>
              <button id="g-highlight-text-<%= t_group_message['id'] %>" class="btn-icon disable"><i class="fas fa-laptop-code"></i></button>
            </div>
            
            <div class="link-dialog" id="g-link-dialog-<%= t_group_message['id'] %>" style="display: none;">
              <h3 id="link-title">Add your link</h3>
              <input type="text" id="g-link-name-<%= t_group_message['id'] %>" placeholder="Enter link name">
              <input type="text" id="g-link-url-<%= t_group_message['id'] %>" placeholder="Enter URL">
              <button id="g-link-cancel-<%= t_group_message['id'] %>">Cancel</button>
              <button id="g-link-save-<%= t_group_message['id'] %>">Yes</button>
            </div>
            
            <%= form_for(:session, url: groupthreadmsgdirectly_path) do |f| %>
              <div class="col-md-11">
                <div class="editor" id="g-editor-<%= t_group_message['id'] %>" data-group-message-id="<%= t_group_message['id'] %>"
                data-autocomplete-source="<%= t_group_message['channel_users'].map { |t| { label: '@' + t } }.to_json %>"></div>
                <%= f.hidden_field :message, id: "g-quill-content-#{t_group_message['id']}" %>
                <%= f.hidden_field :t_group_message_id, value: t_group_message['id'] %>
                <%= f.hidden_field :t_channel_id, value: t_group_message['channel_id'] %>
                <%= f.hidden_field :mention_name, class: 'mention_name' %>
              </div>
              <div class="col-md-1 mt-10">
                <%= f.submit "Send", class: "btn btn-primary", id: "g-sendbtn-#{t_group_message['id']}" %>
              </div>
            <% end %>
            
            <div class="col-md-11">
              <span><i class="fas fa-plus"></i></span>
              <button class="glyphicon glyphicon-font icon togglebtn" id="g-toggle-toolbar-<%= t_group_message['id'] %>"></button>
            </div>
          </div>
        </div>
      </div>
      <% end %>
    <% else %>
      <div class="no-data-container">
        <p class="style2">No group thread yet!</p>
      </div>
    <% end %>
  </div>
</div>

<div>
  <%= render 'leftpanel/leftpanel' %>
</div>

<script>
  // tab button function
  function openTab(evt, tabName) {
    var i, tabcontent, tablinks;
    tabcontent = document.getElementsByClassName("tabcontent");
    for (i = 0; i < tabcontent.length; i++) {
      tabcontent[i].style.display = "none";
    }
    tablinks = document.getElementsByClassName("tablinks");
    for (i = 0; i < tablinks.length; i++) {
      tablinks[i].className = tablinks[i].className.replace(" active", "");
    }
    document.getElementById(tabName).style.display = "block";
    evt.currentTarget.className += " active";
  }

  document.addEventListener('DOMContentLoaded', function() {
    document.querySelector('.tablinks').click();
  });

  // show more replies for direct
  document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.show-more-replies').forEach(function(link) {
      link.addEventListener('click', function(e) {
        e.preventDefault();
        var messageId = this.getAttribute('message-id');
        var repliesContainer = document.getElementById('replies-' + messageId);
        repliesContainer.querySelectorAll('.hidden-reply').forEach(function(reply) {
          reply.classList.remove('hidden-reply');
        });
        this.style.display = 'none';
      });
    });
  });

  // show more replies for group
  document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.g-show-more-replies').forEach(function(link) {
      link.addEventListener('click', function(e) {
        e.preventDefault();
        var messageId = this.getAttribute('message-id');
        var repliesContainer = document.getElementById('g-replies-' + messageId);
        repliesContainer.querySelectorAll('.hidden-reply').forEach(function(reply) {
          reply.classList.remove('hidden-reply');
        });
        this.style.display = 'none';
      });
    });
  });

  // adjust text box height
  function adjustTextboxHeight(div, event) {
    var newHeight = 70;
    var editorContainer = div.querySelector('.ql-editor');
    var lineHeight = parseInt(window.getComputedStyle(editorContainer).lineHeight);
    newHeight += editorContainer.scrollHeight + lineHeight;

    var html = editorContainer.innerHTML;
    var lineBreaks = (html.match(/<br>/g) || []).length;
    newHeight += lineBreaks * lineHeight;

    div.style.height = `${newHeight}px`;
  }

  // quill editor start
  // highlight
  var Inline = Quill.import('blots/inline');
  class HighlightBlot extends Inline {
    static create(value) {
      let node = super.create();
      node.setAttribute('class', 'highlight');
      return node;
    }

    static formats(node) {
      return node.getAttribute('class');
    }
  }
  HighlightBlot.blotName = 'highlight';
  HighlightBlot.tagName = 'span';
  Quill.register(HighlightBlot);

  document.addEventListener("DOMContentLoaded", function() {
    const toolbarOptions = [
      [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
      ['bold', 'italic', 'strike'],
      ['link'],
      [{ 'list': 'ordered'}, { 'list': 'bullet' }],
      ['blockquote', 'code-block'],
    ];

    // Get all the direct message IDs
    var directMessageIds = Array.from(document.querySelectorAll('[data-direct-message-id]')).map(container => container.dataset.directMessageId);
    // Get all the group message IDs
    var groupMessageIds = Array.from(document.querySelectorAll('[data-group-message-id]')).map(container => container.dataset.groupMessageId);

    // for direct
    directMessageIds.forEach(function(messageId) {
      var quill = new Quill(`#editor-${messageId}`, {
        modules: {
          toolbar: {
            container: `#toolbar-${messageId}`,
            handlers: {
              link: function() {
                var range = this.quill.getSelection();
                if (range) {
                  showLinkDialog(range, messageId);
                }
              },
            }
          }
        },
        placeholder: 'Type your message here ...',
        theme: 'snow'
      });

      quill.setText('');
      quill.update();

      // highlight start
      var isHighlighting = false;

      function updateButtonText() {
        var highlightText = document.querySelector(`#highlight-text-${messageId}`);

        if (isHighlighting) {
          highlightText.classList.add('active');
        } else {
          highlightText.classList.remove('active');
        }
      }

      function toggleHighlight() {
        var format = quill.getFormat();
        if (format.highlight) {
          quill.format('highlight', false);
          isHighlighting = false;
        } else {
          quill.format('highlight', true);
          isHighlighting = true;
        }
        updateButtonText();
        quill.focus();
      }

      var hiddenInput = document.querySelector(`#quill-content-${messageId}`);

      quill.on('text-change', function() {
        if (hiddenInput) {
          hiddenInput.value = quill.root.innerHTML;
          var format = quill.getFormat();
          isHighlighting = !!format.highlight;
          updateButtonText();
        } else {
          console.log('Hidden input not found');
        }
      });

      var highlightTextBtn = document.getElementById(`highlight-text-${messageId}`);
      highlightTextBtn.addEventListener('click', function() {
          toggleHighlight();
        var htmlContent = quill.getSemanticHTML();
        document.querySelector(`#quill-content-${messageId}`).value = htmlContent;
      });
      updateButtonText();
      // highlight end 

      // codeblock and highlight btn status 
      quill.container.firstChild.addEventListener('keydown', function(event) {
        if (event.key === 'Enter') {
          isHighlighting = false;
          updateButtonText();
        }
      });

      // for link dialog 
      var range = quill.getSelection();
      quill.on('selection-change', function(range, oldRange, source) {
        if (range && range.length > 0) {
          var selectedText = quill.getText(range.index, range.length);
          if (selectedText) {
            $(`#toolbar-${messageId}`).removeClass("hidden");
          }
          $(`#link-name-${messageId}`).val(selectedText);
        }
      });

      function showLinkDialog(range) {
        var linkDialog = document.getElementById(`link-dialog-${messageId}`);
        linkDialog.style.display = 'block';
        document.querySelector(`#link-name-${messageId}`).focus();
        document.querySelector(`#link-save-${messageId}`).onclick = function() {
          var linkText = document.querySelector(`#link-name-${messageId}`).value;
          var linkUrl = document.querySelector(`#link-url-${messageId}`).value;
          if (linkText && linkUrl) {
            quill.insertText(range.index, linkText,'link', linkUrl);
            if (range.length > 0) {
              quill.deleteText(range.index + linkText.length, range.length);
            }
            quill.setSelection(range.index + linkText.length, 0);
            hideLinkDialog(messageId);
          }
        };
        document.getElementById(`link-cancel-${messageId}`).onclick = function() {
          hideLinkDialog(messageId);
        };
      }

      function hideLinkDialog(messageId) {
        var linkDialog = document.getElementById(`link-dialog-${messageId}`);
        linkDialog.style.display = 'none';
        document.querySelector(`#link-name-${messageId}`).value = '';
        document.querySelector(`#link-url-${messageId}`).value = '';
      }

      // Prevent Quill from losing focus when clicking inside the dialog
      document.querySelector(`#link-dialog-${messageId}`).addEventListener('mousedown', function(event) {
        event.stopPropagation();
      });

      // for toggle toolbar
      var toolbarui = document.getElementById(`toolbar-${messageId}`);
      var toggleButton = document.getElementById(`toggle-toolbar-${messageId}`);
      toggleButton.addEventListener('click', function() {
        toolbarui.classList.toggle('hidden');
      });

      var form = document.querySelector(`#quill-content-${messageId}`).closest('form');
      form.onsubmit = function() {
        var htmlContent = quill.getSemanticHTML();
        var quillContent = document.querySelector(`#quill-content-${messageId}`);
        htmlContent = htmlContent.replace(/<pre([^>]*)data-language="plain"([^>]*)>([\s\S]*?)<\/pre>/g, function(match, attr1, attr2, content) {
        content = content.trim().replace(/\n/g, '<br>');
        return `<div${attr1}class="ql-code-block"${attr2}>${content}</div>`;
      });
      htmlContent = htmlContent.replace(/<\/blockquote>\s*<blockquote>/g, '<br>');
      htmlContent = htmlContent.replace(/<\/p><p>/g, '<br>').replace(/<\/?p[^>]*>/g, '');
        quillContent.value = htmlContent;
      }

      // validate btn
      var sendbtn = document.querySelector(`#sendbtn-${messageId}`);
      sendbtn.disabled = true;
      quill.on('text-change', function(delta, oldDelta, source) {
        hiddenInput.value = quill.root.innerHTML;
        var editorContent = quill.getText().trim();

        if (editorContent.length > 0) {
          sendbtn.disabled = false;
        } else {
          sendbtn.disabled = true;
        }
      });
    });

    // for group 
    groupMessageIds.forEach(function(gMessageId) {
      var quill = new Quill(`#g-editor-${gMessageId}`, {
        modules: {
          toolbar: {
            container: `#g-toolbar-${gMessageId}`,
            handlers: {
              link: function() {
                var range = this.quill.getSelection();
                if (range) {
                  showLinkDialog(range, gMessageId);
                }
              }
            }
          }
        },
        placeholder: 'Type your message here ...',
        theme: 'snow'
      });

      quill.setText('');
      quill.update();
      
      // highlight start
      var isHighlighting = false;

      function updateButtonText() {
        var highlightText = document.querySelector(`#g-highlight-text-${gMessageId}`);

        if (isHighlighting) {
          highlightText.classList.add('active');
        } else {
          highlightText.classList.remove('active');
        }
      }

      function toggleHighlight() {
        var format = quill.getFormat();
        if (format.highlight) {
          quill.format('highlight', false);
          isHighlighting = false;
        } else {
          quill.format('highlight', true);
          isHighlighting = true;
        }
        updateButtonText();
        quill.focus();
      }

      var hiddenInput = document.querySelector(`#g-quill-content-${gMessageId}`);

      quill.on('text-change', function() {
        if (hiddenInput) {
          hiddenInput.value = quill.root.innerHTML;
          var format = quill.getFormat();
          isHighlighting = !!format.highlight;
          updateButtonText();
        } else {
          console.log('Hidden input not found');
        }
      });

      var highlightTextBtn = document.getElementById(`g-highlight-text-${gMessageId}`);
      highlightTextBtn.addEventListener('click', function() {
          toggleHighlight();
        var htmlContent = quill.getSemanticHTML();
        document.querySelector(`#g-quill-content-${gMessageId}`).value = htmlContent;
      });
      updateButtonText();
      // highlight end

      // codeblock and highlight btn status
      quill.container.firstChild.addEventListener('keydown', function(event) {
        if (event.key === 'Enter') {
          isHighlighting = false;
          updateButtonText();
        }
      });

      // for link dialog 
      var range = quill.getSelection();
      quill.on('selection-change', function(range, oldRange, source) {
        if (range && range.length > 0) {
          var selectedText = quill.getText(range.index, range.length);
          if (selectedText) {
            $(`#g-toolbar-${gMessageId}`).removeClass("hidden");
          }
          $(`#g-link-name-${gMessageId}`).val(selectedText);
        }
      });

      function showLinkDialog(range) {
        var linkDialog = document.getElementById(`g-link-dialog-${gMessageId}`);
        linkDialog.style.display = 'block';
        document.querySelector(`#g-link-name-${gMessageId}`).focus();
        document.querySelector(`#g-link-save-${gMessageId}`).onclick = function() {
          var linkText = document.querySelector(`#g-link-name-${gMessageId}`).value;
          var linkUrl = document.querySelector(`#g-link-url-${gMessageId}`).value;
          if (linkText && linkUrl) {
            quill.insertText(range.index, linkText,'link', linkUrl);
            if (range.length > 0) {
              quill.deleteText(range.index + linkText.length, range.length);
            }
            quill.setSelection(range.index + linkText.length, 0);
            hideLinkDialog(gMessageId);
          }
        };
        document.getElementById(`g-link-cancel-${gMessageId}`).onclick = function() {
          hideLinkDialog(gMessageId);
        };
      }

      function hideLinkDialog(gMessageId) {
        var linkDialog = document.getElementById(`g-link-dialog-${gMessageId}`);
        linkDialog.style.display = 'none';
        document.querySelector(`#g-link-name-${gMessageId}`).value = '';
        document.querySelector(`#g-link-url-${gMessageId}`).value = '';
      }

      // Prevent Quill from losing focus when clicking inside the dialog
      document.querySelector(`#g-link-dialog-${gMessageId}`).addEventListener('mousedown', function(event) {
        event.stopPropagation();
      });

      // for toggle toolbar 
      var toolbarui = document.getElementById(`g-toolbar-${gMessageId}`);
      var toggleButton = document.getElementById(`g-toggle-toolbar-${gMessageId}`);
      toggleButton.addEventListener('click', function() {
        toolbarui.classList.toggle('hidden');
      });

      var form = document.querySelector(`#g-quill-content-${gMessageId}`).closest('form');
      form.onsubmit = function() {
        var htmlContent = quill.getSemanticHTML();
        var quillContent = document.querySelector(`#g-quill-content-${gMessageId}`);
        htmlContent = htmlContent.replace(/<pre([^>]*)data-language="plain"([^>]*)>([\s\S]*?)<\/pre>/g, function(match, attr1, attr2, content) {
        content = content.trim().replace(/\n/g, '<br>');
        return `<div${attr1}class="ql-code-block"${attr2}>${content}</div>`;
      });
      htmlContent = htmlContent.replace(/<\/blockquote>\s*<blockquote>/g, '<br>');
      htmlContent = htmlContent.replace(/<\/p><p>/g, '<br>').replace(/<\/?p[^>]*>/g, '');
        quillContent.value = htmlContent;
      }

      // for mention select
      $( `#g-editor-${gMessageId}` ).autocomplete({
        source: $(`#g-editor-${gMessageId}`).data('autocomplete-source'),
        position: {
          my: "left bottom",
          at: "left top",
        },
        select: function(event, ui) {
          event.preventDefault();
          var range = quill.getSelection();

          range.value = ui.item.value
          $('.mention_name').val(range.value)

          // Check the text before the cursor
          var textBefore = quill.getText(range.index - 1, 1);
          if (textBefore === '@') {
            // Delete the @ before inserting the new text
            quill.deleteText(range.index - 1, 1);
            range.index -= 1;
          }
          quill.insertText(range.index, ui.item.label, "user");
          quill.setSelection(range.index + ui.item.label.length);
        }
      });

      // validate btn
      var gSendbtn = document.querySelector(`#g-sendbtn-${gMessageId}`);
      gSendbtn.disabled = true;
      quill.on('text-change', function(delta, oldDelta, source) {
        hiddenInput.value = quill.root.innerHTML;
        var editorContent = quill.getText().trim();
        if (editorContent.length > 0) {
          gSendbtn.disabled = false;
        } else {
          gSendbtn.disabled = true;
        }
      });
    });
  });
</script>
